# input{
#     file{
#         path => "/Users/akash.kareliya/Documents/Projects/Flask/flask_cicd_docker/app.log"
#         start_position => "beginning"
#     }
# }
# filter{
#     grok{
#         match => {"message"=>"%{TIMESTAMP_ISO8601:timestamp} - %{NAME:name} - %{FILENAME:filename} - %{FUNCTIONNAME:funcName} - %{LINENO:lineno} - %{LEVELNAME:log-level} - %{MESSAGE:message} - %{STACK_INFO:stack_info}"}
#     }
# }
input {
  tcp {
    port => 5959
    codec => "json"
  }
}
filter{
    if ! [host][name] {
	mutate {
	   rename => { "[host]" => "[host][name]"	}
		}
    }
}
output {
  elasticsearch{
    hosts => ["localhost:9200"]
    index => "ctc"
  }
  stdout {
    codec => rubydebug
  }
}